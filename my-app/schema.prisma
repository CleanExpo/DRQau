generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  consultations Consultation[]
  appointments  Appointment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Consultation {
  id           String        @id @default(cuid())
  title        String
  description  String?
  status       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  messages     Message[]
  appointments Appointment[]
}

model Message {
  id             String       @id @default(cuid())
  content        String
  role           String
  createdAt      DateTime     @default(now())
  consultationId String
  consultation   Consultation @relation(fields: [consultationId], references: [id])
}

model Appointment {
  id             String       @id @default(cuid())
  datetime       DateTime
  status         String
  notes          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  consultationId String
  consultation   Consultation @relation(fields: [consultationId], references: [id])
}
